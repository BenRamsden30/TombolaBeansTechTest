@page "/beanoftheday"
@using TombolaBeansTechTest.Models
@using TombolaBeansTechTest.Services

<h3>Bean of the Day</h3>

@if (@selectedBean != null)
{
    <div class="bean-of-the-day-container">
        <h4>@selectedBean.Name</h4>
        <p>@selectedBean.Description</p>
        <p><strong>Price:</strong> @selectedBean.Price.ToString("C")</p>

        <!-- Button for more details -->
        <a href="/CoffeBeans/@selectedBean.Id" class="btn btn-primary">View Details</a>
    </div>
}
else
{
    <p>Loading bean of the day...</p>
}

@code
{
    // The selected CoffeeBean for the "Bean of the Day"
    private CoffeBeans selectedBean;

    // Injecting the CoffeeBeansService
    [Inject] private CoffeBeanService CoffeeBeansService { get; set; }

    // Injecting the NavigationManager for navigation
    [Inject] private NavigationManager NavigationManager { get; set; }

    // This method is invoked when the component is initialized
    protected override void OnInitialized()
    {
        // Get the random "Bean of the Day" and ensure it's not the same as the previous day
        selectedBean = GetBeanOfTheDay();
    }

    // Function to get the "Bean of the Day"
    private CoffeBeans GetBeanOfTheDay()
    {
        var beans = CoffeeBeansService.GetAllBeans(); // Get the list of beans
        var random = new Random();

        // Select a random coffee bean
        var todaysBean = beans[random.Next(beans.Count)];

        return todaysBean;
    }

    // Handler to navigate to more details about the current Bean of the Day
    private void ShowMoreDetails()
    {
        // Navigate to a page showing more details of the current coffee bean
        NavigationManager.NavigateTo($"/coffeebean/{selectedBean.Name}");
    }
}
